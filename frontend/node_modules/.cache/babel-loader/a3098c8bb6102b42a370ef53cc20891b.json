{"ast":null,"code":"/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback) => {\n  function recurse(object) {\n    let parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    Object.entries(object).forEach(_ref => {\n      let [key, value] = _ref;\n      if (value !== undefined && value !== null) {\n        if (typeof value === 'object' && Object.keys(value).length > 0) {\n          recurse(value, [...parentKeys, key]);\n        } else {\n          callback([...parentKeys, key], value);\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // css property that are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{ prefix?: string }} options\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: '#000000' } }\n * })\n *\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\n */\n\nexport default function cssVarsParser(obj, options) {\n  const {\n    prefix\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(obj, (keys, value) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n      Object.assign(css, {\n        [cssVar]: getCssValue(keys, value)\n      });\n      assignNestedKeys(vars, keys, `var(${cssVar})`);\n    }\n  });\n  return {\n    css,\n    vars\n  };\n}","map":{"version":3,"names":["assignNestedKeys","obj","keys","value","temp","forEach","k","index","length","walkObjectDeep","callback","recurse","object","parentKeys","Object","entries","key","undefined","getCssValue","some","prop","includes","cssVarsParser","options","prefix","css","vars","cssVar","join","assign"],"sources":["/home/vt/Documents/node-react/frontend/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback) => {\n  function recurse(object, parentKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        if (typeof value === 'object' && Object.keys(value).length > 0) {\n          recurse(value, [...parentKeys, key]);\n        } else {\n          callback([...parentKeys, key], value);\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // css property that are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{ prefix?: string }} options\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: '#000000' } }\n * })\n *\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\n */\n\n\nexport default function cssVarsParser(obj, options) {\n  const {\n    prefix\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(obj, (keys, value) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n      Object.assign(css, {\n        [cssVar]: getCssValue(keys, value)\n      });\n      assignNestedKeys(vars, keys, `var(${cssVar})`);\n    }\n  });\n  return {\n    css,\n    vars\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}